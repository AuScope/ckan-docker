apiVersion: apps/v1
kind: Deployment # StatefulSet
metadata:
  name: {{ include "ckan-helm.ckan.fullname" . }}
  labels:
    {{- include "ckan-helm.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.ckan.replicaCount | default 1 }}
  selector:
    matchLabels:
      app: {{ include "ckan-helm.ckan.fullname" . }}
  template:
    metadata:
      labels:
        app: {{ include "ckan-helm.ckan.fullname" . }}
    spec:
      initContainers:
      #   - name: check-postgres
      #     image: appropriate/curl
      #     command: ['sh', '-c', 'until curl -sf http://postgres-service:5432; do echo waiting for postgres; sleep 2; done;']
        - name: check-solr
          image: appropriate/curl
          {{- if .Values.useDumpedEnvs}}
          command: ['sh', '-c', 'until curl -sf http://solr:{{.Values.solr.service.port}}; do echo waiting for solr; sleep 2; done;']
          {{- else}}
          command: ['sh', '-c', 'until curl -sf http://{{ include "ckan-helm.solr.fullname" . }}:{{.Values.solr.service.port}}; do echo waiting for solr; sleep 2; done;']
          {{- end}}
      #   - name: check-datapusher
      #     image: appropriate/curl
      #     command: ['sh', '-c', 'until curl -sf $CKAN_DATAPUSHER_URL; do echo waiting for datapusher; sleep 2; done;']
      #   - name: check-redis
      #     image: appropriate/curl
      #     command: ['sh', '-c', 'until curl -sf $CKAN_REDIS_URL; do echo waiting for redis; sleep 2; done;']
        - name: ckan-volume-permissions
          image: busybox
          command: ['sh', '-c', 'chmod -R 777 /var/lib/ckan']
          volumeMounts:
          - mountPath: /var/lib/ckan
            name: ckan-storage

      containers:
      - name: ckan
        image: "{{ .Values.ckan.image.repository }}:{{ .Values.ckan.image.tag }}"
        ports:
        - name: ckan
          containerPort: {{ .Values.ckan.service.port }}
        resources:
          {{- toYaml .Values.ckan.resources | nindent 12 }}
        envFrom:
          - configMapRef:
              name: {{.Values.global.appName}}-{{ .Release.Name }}-config
          - secretRef:
              name: {{.Values.global.appName}}-{{ .Release.Name }}-secrets
        volumeMounts:
        - name: ckan-storage
          mountPath: /var/lib/ckan
      volumes:
        - name: ckan-storage
          persistentVolumeClaim:
            claimName: {{ include "ckan-helm.ckan.fullname" . }}-pvc
---
# Ckan-PVC
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ include "ckan-helm.ckan.fullname" . }}-pvc
spec:
    accessModes:
    - {{ .Values.ckan.persistence.accessMode }}
    resources:
      requests:
        storage: {{ .Values.ckan.persistence.size }}
    storageClassName: {{ .Values.ckan.persistence.storageClass | quote }}
